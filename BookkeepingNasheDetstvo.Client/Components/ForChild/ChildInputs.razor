@inherits SessionController

<div class="w3-rest w3-mobile">
    <div class="w3-container w3-padding">
        <InputText Label="Фамилия" bind-Value="@Child.LastName" />
        <InputText Label="Имя" bind-Value="@Child.FirstName" />
        <InputText Label="Отчество" bind-Value="@Child.SecondName" />
        <InputText Label="Ссылка на фото" bind-Value="@Child.ImageUrl" />
        <InputText Label="ФИО отца" bind-Value="@Child.FatherName" />
        <InputText Label="Номер телефона отца" bind-Value="@Child.FatherPhone" />
        <InputText Label="ФИО матери" bind-Value="@Child.MotherName" />
        <InputText Label="Номер телефона матери" bind-Value="@Child.MotherPhone" />
        <InputDecimal Label="Оплата за час личного занятия" bind-Value="@Child.PerHourPrivate" />
        <InputDecimal Label="Оплата за час группового занятия" bind-Value="@Child.PerHourGroup" />
        <InputDecimal Label="Оплата за час консультации" bind-Value="@Child.PerHourConsultation" />
    </div>

    <HalfButtonSavingGroup IsSuccess="@Success" IsBusy="@Busy" IsSaving="@Saving" DeleteAsync="@DeleteAsync" SaveAsync="@SaveAsync" />

    @if (ReadGlobalStatistic)
    {
        <Button Color="blue" Click=@(async () => NavigateTo($"/statistic/child/{Child.Id}")) Text="Статистика" />
    }
</div>

@functions
{
    private bool Busy { get; set; }
    private bool Success { get; set; } = true;
    private bool Saving { get; set; }

    [Parameter]
    private ChildModel Child { get; set; }

    [Parameter]
    private bool ReadGlobalStatistic { get; set; }

    private async Task SaveAsync()
    {
        if (Busy || Success)
        {
            return;
        }

        Busy = true;
        Saving = true;
        StateHasChanged();

        Child.Id = await PostAsync<string>("/api/child", Child);

        Busy = false;
        Success = true;
        StateHasChanged();
    }

    private async Task DeleteAsync()
    {
        if (Busy)
        {
            return;
        }

        Busy = true;
        Saving = false;
        StateHasChanged();

        await PostAsync<object>("/api/child/delete", Child.Id);
        NavigateTo("/children");
    }

    private void Edited()
    {
        Success = false;
        StateHasChanged();
    }
}