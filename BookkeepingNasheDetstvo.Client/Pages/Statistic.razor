@layout __Layout
@page "/statistic/{Type}/{Id}"
@using BookkeepingNasheDetstvo.Client.Models.Statistic
@inherits BaseComponent

@if (!string.IsNullOrEmpty(_statistic?.Name))
{
    <div class="w3-margin-top w3-margin-bottom w3-center w3-block">
        <label class="w3-xlarge w3-text-teal">@_statistic.Name</label>
    </div>
}
<div class="w3-padding-small">
    <h2>Выберите промежуток:</h2>
    <div class="w3-container w3-card-2 w3-padding-small">
        <label class="w3-large">От</label>
        <input class="w3-input w3-large" type="text" format-value="d-M-yyyy" bind="@From" />
        <label class="w3-large">До</label>
        <input class="w3-input w3-large" type="text" format-value="d-M-yyyy" bind="@To" />
    </div>
</div>
@if (!_busy)
{
    <ButtonComponent Color="blue" Text="Обновить данные" Click=@(async () => await UpdateStatistic()) />
}
else
{
    <ButtonComponent Color="blue" Text="Обновляем данные..." NoHover=true Disabled=true Click=@(async () => await UpdateStatistic()) />
}
<div class="w3-container">
    
</div>

@functions {
        bool _busy = true;

        DateTime From { get; set; }
        DateTime To { get; set; }

        StatisticModel _statistic;

[Parameter]
    string Id { get; set; }

    [Parameter]
    string Type { get; set; }

    protected override async Task OnInitAsync()
    {
        await CheckAccessToken();
        await LoadCurrent();
        if (!Current.ReadGlobalStatistic || Type != "child" && Type != "teacher")
        {
            UriHelper.NavigateTo("/");
        }

        await UpdateStatistic();
    }

    async Task UpdateStatistic()
    {
        _busy = true;
        StateHasChanged();

        if (From == default)
        {
            var now = DateTime.Now;
            From = new DateTime(now.Year, now.Month, 1);
            To = now.Date;
        }

        _statistic = await Get<StatisticModel>($"/api/statistic/{Type}/{Id}/?from={From:d-M-yyyy}&to={To:d-M-yyyy}");
        IsOk = _statistic != default;

        _busy = false;
        StateHasChanged();
    }
}