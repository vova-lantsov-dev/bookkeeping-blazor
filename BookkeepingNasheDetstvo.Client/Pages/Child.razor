@using BookkeepingNasheDetstvo.Client.Components.ForChild
@using BookkeepingNasheDetstvo.Client.Components.ForList
@using BookkeepingNasheDetstvo.Client.Components.ForLoading
@using BookkeepingNasheDetstvo.Client.Models.ForChild

@layout __Layout
@page "/child"
@page "/child/{Id}"
@inherits SessionController

<RedirectLoadingAction IsOk="@IsOk" CheckIfNullObject="@_child" Message="Произошла ошибка при поиске ребёнка."
               RedirectUrl="/children">
    <Avatar AvatarUrl="@_child.ImageUrl" />
    <ChildComponent EditChildren="@Current.EditChildren" ReadGlobalStatistics="@Current.ReadGlobalStatistic" Child="@_child" />
</RedirectLoadingAction>

@functions
{
    private ChildModel _child;

    [Parameter] private string Id { get; set; }

    protected override async Task OnInitAsync()
    {
        await CheckAccessToken();
        await LoadCurrent();
        _child = !string.IsNullOrEmpty(Id)
            ? await GetAsync<ChildModel>($"/api/child/{Id}")
            : new ChildModel
            {
                FirstName = "",
                ImageUrl = "",
                LastName = "",
                SecondName = "",
                FatherName = "",
                FatherPhone = "+380",
                MotherName = "",
                MotherPhone = "+380",
                PerHourPrivate = 0m,
                PerHourGroup = 0m,
                PerHourConsultation = 0m
            };

        IsOk = _child != default;
    }
}