@layout __Layout
@page "/teachers"
@inherits BaseComponent

<ButtonComponent Color="blue" Text="Добавить преподавателя" Click=@(() => UriHelper.NavigateTo("/teacher")) />

<LoadingAction IsOk="@IsOk" CheckIfNullObject="@_models" SubmitButtonText="Повторить попытку"
               Message="Произошла ошибка при загрузке списка преподавателей."
               SubmitButtonAction="@(async () =>
                                     {
                                         IsOk = true;
                                         StateHasChanged();
                                         await Load();
                                     })">
    <AvatarListAction Models="@_models" Message="Преподавателей пока что нет." />
</LoadingAction>

@functions
{
    private readonly List<AvatarItemModel> _models = new List<AvatarItemModel>();
    
    protected override async Task OnInitAsync()
    {
        await CheckAccessToken();
        await Load();
    }

    private async Task Load()
    {
        var teachers = await Get<List<TeacherModel>>("/api/teachers");

        if (teachers == default)
        {
            IsOk = false;
            return;
        }
        
        // TODO refactoring
        _models.Clear();
        foreach (var teacher in teachers)
            _models.Add(new AvatarItemModel
            {
                AvatarUrl = teacher.ImageUrl,
                Title = $"{teacher.LastName} {teacher.FirstName}".Trim(),
                ViewUrl = $"/teacher/{teacher.Id}"
            });
    }
}
