@layout __Layout
@page "/teachers"
@inherits BookkeepingNasheDetstvo.Client.Components.ActionComponents.BaseComponent

<ButtonComponent Color="blue" Text="Добавить преподавателя" Click=@(() => UriHelper.NavigateTo("/teacher")) />

@if (_models == null)
{
    if (IsOk)
    {
        <Loading />
    }
    else
    {
        <Action ButtonText="Перезагрузить страницу" Text="Произошла ошибка при загрузке данных" ButtonAction=@(async () => { IsOk = true; StateHasChanged(); await OnInitAsync(); }) />
    }
}
else if (_models.Count == 0)
{
    <p>Преподавателей пока что нет.</p>
}
else
{
    <AvatarList Models=@_models UriHelper=@UriHelper />
}

@functions {
    // ReSharper disable once FieldCanBeMadeReadOnly.Local
    List<AvatarItemModel> _models = new List<AvatarItemModel>();
    
    protected override async Task OnInitAsync()
    {
        await CheckAccessToken();
        
        var teachers = await Get<List<T>>("/api/teachers");

        IsOk = teachers != default;
        if (!IsOk)
            return;
        
        _models.Clear();
        // ReSharper disable once PossibleNullReferenceException
        foreach (var teacher in teachers)
            _models.Add(new AvatarItemModel
            {
                AvatarUrl = teacher.ImageUrl,
                Title = $"{teacher.LastName} {teacher.FirstName}".Trim(),
                ViewUrl = $"/teacher/{teacher.Id}"
            });
    }
}
